object CurrentProject: TCENativeProject
  OptionsCollection = <  
    item
      name = 'win32'
      messagesOptions.tlsInformations = True
      outputOptions.inlining = True
      outputOptions.boundsCheck = offAlways
      outputOptions.optimizations = True
      outputOptions.release = True
      pathsOptions.outputFilename = 'output/dexed.<CPV>.win32.setup'
      pathsOptions.importStringPaths.Strings = (
        'win32/'
        '<CPP>'
      )
      pathsOptions.forceExtension = True
      preBuildProcess.executable = 'cmd'
      preBuildProcess.workingDirectory = '<CPP>'
      preBuildProcess.options = [poUsePipes, poStderrToOutPut]
      preBuildProcess.parameters.Strings = (
        '/c'
        ' zip-win32.bat'
      )
      preBuildProcess.showWindow = swoHIDE
      postBuildProcess.executable = 'setupzip-win32.bat'
      postBuildProcess.workingDirectory = '<CPP>'
      postBuildProcess.options = [poUsePipes, poStderrToOutPut]
      postBuildProcess.parameters.Strings = (
        '<CPO>'
      )
      postBuildProcess.showWindow = swoHIDE
    end  
    item
      name = 'nux32'
      outputOptions.inlining = True
      outputOptions.boundsCheck = offAlways
      outputOptions.optimizations = True
      outputOptions.release = True
      pathsOptions.outputFilename = 'output/dexed.<CPV>.linux32.setup'
      pathsOptions.importStringPaths.Strings = (
        'nux32/'
        '<CPP>'
      )
      preBuildProcess.executable = 'bash'
      preBuildProcess.workingDirectory = '<CPP>'
      preBuildProcess.options = [poUsePipes, poStderrToOutPut]
      preBuildProcess.parameters.Strings = (
        'zip-nux32.sh'
      )
      postBuildProcess.executable = 'bash'
      postBuildProcess.workingDirectory = '<CPP>'
      postBuildProcess.options = [poUsePipes, poStderrToOutPut]
      postBuildProcess.parameters.Strings = (
        'setupzip-nux-noarch.sh'
        '<CPO>'
      )
    end  
    item
      name = 'nux64'
      outputOptions.inlining = True
      outputOptions.boundsCheck = offAlways
      outputOptions.optimizations = True
      outputOptions.release = True
      pathsOptions.outputFilename = 'output/dexed.<CPV>.linux64.setup'
      pathsOptions.importStringPaths.Strings = (
        'nux64/'
        '<CPP>'
      )
      preBuildProcess.executable = 'sh'
      preBuildProcess.workingDirectory = '<CPP>'
      preBuildProcess.options = [poUsePipes, poStderrToOutPut]
      preBuildProcess.parameters.Strings = (
        'zip-nux64.sh'
      )
      postBuildProcess.executable = 'sh'
      postBuildProcess.workingDirectory = '<CPP>'
      postBuildProcess.options = [poUsePipes, poStderrToOutPut]
      postBuildProcess.parameters.Strings = (
        'setupzip-nux-noarch.sh'
        '<CPO>'
      )
      runOptions.options = [poUsePipes]
    end>
  Sources.Strings = (
    'setup.d'
  )
  ConfigurationIndex = 2
  version = '3.6.20'
end
